// 1
let N;

do {
    N = +prompt('Введіть перше число, будь ласка. Воно повинно дорівнювати або бути більше 0.');
} while ( N < 0 || !Number.isInteger(N) );

// 2
const numCheckMessage = `Число нам підходить.`;

// 3
let M;

do {
    M = +prompt(`Введіть друге число, будь ласка. Воно повинно бути більше першого числа (перше число, що ви ввели, - ${ N }).`);
} while ( M < N || !Number.isInteger(M) );

// 5
const evenNumCheck = confirm('Чи враховувати парні числа? ОК - так, Cancel - ні.');
const evemNumMessage = `Ви обрали - ${ evenNumCheck }, тому числа ${ evenNumCheck ? ' будуть ' : ' не будуть' } враховані.`;

// 6
let sum = 0;

for ( let i = N ; i <= M ; i ++ ) {
    if ( evenNumCheck ) {
        sum += i;
    } else {
        if ( i % 2 != 0 ) {
            sum += i;
        }
    }
}

export const taskDataTwo = [
    {
        id: 0,
        title: `Homework 02. Цикли і Розгалуження`
    },
    {
        id: 1,
        txt: `Необхідно написати програму, яка виконує складання чисел від N до M (N та M – задаються користувачем), а також програма має вміти пропускати парні числа.Отримайте у користувача число(N) від якого ми будемо рахувати:`,
        answer: [
            N
        ]
    },
    {
        id: 2,
        txt: `Перевірте, чи є передане значення N ЦІЛИМ числом.`,
        answer: [
            numCheckMessage
        ]
    },
    {
        id: 3,
        txt: `Отримайте у користувача число(M) до якого ми будемо складати (включно).`,
        answer: [
            M
        ]
    },
    {
        id: 4,
        txt: `Перевірте, чи є передане значення M ЦІЛИМ числом.`,
        answer: [
            numCheckMessage
        ]
    },
    {
        id: 5,
        txt: `Отримайте у користувача булевий параметр(true/false), який підкаже нам чи потрібно пропускати парні числа. TRUE – потрібно, FALSE – не потрібно.`,
        answer: [
            evemNumMessage
        ]
    },
    {
        id: 6,
        txt: `Напишіть цикл, який буде складати числа від раніше отриманих N та M. В циклі додайте перевірку – чи потрібно пропускати при складанні парні числа. Виведіть результат`,
        answer: [
            sum
        ]
    }
];
